SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS,
  UNIQUE_CHECKS = 0;
SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS,
  FOREIGN_KEY_CHECKS = 0;
SET @OLD_SQL_MODE = @@SQL_MODE,
  SQL_MODE = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
-- -----------------------------------------------------
-- Schema CEBS_db
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema CEBS_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `CEBS_db` DEFAULT CHARACTER SET utf8;
USE `CEBS_db`;
-- -----------------------------------------------------
-- Table `CEBS_db`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEBS_db`.`User` (
  `user_id` INT AUTO_INCREMENT COMMENT 'The id of the user for use within the system. ',
  `login_status` TINYINT NOT NULL COMMENT 'Whether or not the user is signed in.',
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `account_type` INT NOT NULL,
  `account_status` INT NOT NULL,
  PRIMARY KEY (`user_id`)
) ENGINE = InnoDB;
INSERT INTO User (
    login_status,
    username,
    password,
    account_type,
    account_status
  )
VALUES (0, 'user1@gmail.com', 'password', 1, 1);
-- -----------------------------------------------------
-- Table `CEBS_db`.`Customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEBS_db`.`Customers` (
  `customer_id` INT NOT NULL COMMENT 'the customer\'s id for refrence within the system. ',
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `account_status` INT NOT NULL COMMENT 'The status of the customer\'s account',
  `user_id` INT NOT NULL COMMENT 'The user associated with this customer account.',
  `num_cards` INT NOT NULL COMMENT 'The number of credit cards associated with this customer, max of 3.',
  PRIMARY KEY (`customer_id`),
  INDEX `account_status_idx` (`account_status` ASC),
  INDEX `user_idx` (`user_id` ASC),
  UNIQUE INDEX `customer_id_UNIQUE` (`customer_id` ASC),
  CONSTRAINT `userid` FOREIGN KEY (`user_id`) REFERENCES `CEBS_db`.`User` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `CEBS_db`.`credit_cards`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEBS_db`.`credit_cards` (
  `card_id` INT NOT NULL COMMENT 'The id for the card within the db\n',
  `card_number` VARCHAR(256) NOT NULL COMMENT 'The encrypted cc#',
  `ccv` SMALLINT(3) NOT NULL COMMENT 'The ccv of the credit card',
  `expiration` VARCHAR(256) NOT NULL COMMENT 'the credit card\'s expiration date',
  `billingAddress` VARCHAR(256) NOT NULL COMMENT 'The billing address associated with this card\n',
  `customer_id` INT NOT NULL COMMENT 'The customer this card is associated with.',
  PRIMARY KEY (`card_id`),
  INDEX `customer_id_idx` (`customer_id` ASC),
  UNIQUE INDEX `card_id_UNIQUE` (`card_id` ASC),
  CONSTRAINT `customer_id` FOREIGN KEY (`customer_id`) REFERENCES `CEBS_db`.`Customers` (`customer_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `CEBS_db`.`categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEBS_db`.`categories` (
  `category_id` INT NOT NULL AUTO_INCREMENT COMMENT 'The numerical representation of the rating system for use in the database.',
  `Category` VARCHAR(45) NOT NULL COMMENT 'The string value of the ratings. ',
  PRIMARY KEY (`category_id`)
) ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `CEBS_db`.`Movies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEBS_db`.`Movies` (
  `movie_id` INT NOT NULL COMMENT 'The movie id for use within the system. ',
  `title` VARCHAR(45) NOT NULL COMMENT 'The title of the movie',
  `cast_members` VARCHAR(1024) NOT NULL,
  `director` VARCHAR(45) NOT NULL,
  `Synopsis` VARCHAR(500) NOT NULL,
  `trailerLink` VARCHAR(256) NOT NULL,
  `category` INT NOT NULL COMMENT 'The genre of the movie, referenced to the category table. ',
  `rating` INT NOT NULL COMMENT 'The rating of the movie, referencing the ratings table',
  PRIMARY KEY (`movie_id`),
  INDEX `category_idx` (`category` ASC),
  CONSTRAINT `category` FOREIGN KEY (`category`) REFERENCES `CEBS_db`.`categories` (`category_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `CEBS_db`.`Showroom`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEBS_db`.`Showroom` (
  `room_id` INT AUTO_INCREMENT COMMENT 'The room id for reference within the db',
  `open` TINYINT NOT NULL COMMENT 'A boolean determing whether or not the room is available for use. ',
  PRIMARY KEY (`room_id`),
  UNIQUE INDEX `room_id_UNIQUE` (`room_id` ASC)
) ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `CEBS_db`.`Showing`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEBS_db`.`Showing` (
  `showing_id` INT NOT NULL AUTO_INCREMENT COMMENT 'The id of the showing for reference within the system. ',
  `date` DATETIME NOT NULL,
  `time` DATETIME NOT NULL,
  `duration` DATETIME NOT NULL,
  `movie` INT NOT NULL COMMENT 'The id of the movie associated with this showing.',
  `show_room` INT NOT NULL COMMENT 'The id of the showroom this movie is being shown in. ',
  PRIMARY KEY (`showing_id`),
  INDEX `movie_idx` (`movie` ASC),
  INDEX `showroom_idx` (`show_room` ASC),
  CONSTRAINT `movie` FOREIGN KEY (`movie`) REFERENCES `CEBS_db`.`Movies` (`movie_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `showroom` FOREIGN KEY (`show_room`) REFERENCES `CEBS_db`.`Showroom` (`room_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `CEBS_db`.`Promotions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEBS_db`.`Promotions` (
  `promotion_id` INT NOT NULL COMMENT 'The id for the promotion, to be referenced when a promo code is used.',
  `code` VARCHAR(32) NOT NULL,
  `start_date` DATETIME NOT NULL,
  `end_date` DATETIME NOT NULL,
  PRIMARY KEY (`promotion_id`)
) ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `CEBS_db`.`booking`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEBS_db`.`booking` (
  `booking_id` INT NOT NULL COMMENT 'The id for a specific booking\n',
  `ticket_count` INT NOT NULL COMMENT 'The number of tickets associated with this booking\n',
  `paid` TINYINT NOT NULL COMMENT 'Whether or not this booking has been paid for.',
  `promtionEntered` INT NOT NULL COMMENT 'Which promotion has been entered, if any. ',
  `customer` INT NOT NULL COMMENT 'The customer associated with this booking.',
  `Show_id` INT NOT NULL,
  `total_price` FLOAT NOT NULL,
  PRIMARY KEY (`booking_id`),
  INDEX `promotion_idx` (`promtionEntered` ASC),
  INDEX `customer_idx` (`customer` ASC),
  UNIQUE INDEX `booking_id_UNIQUE` (`booking_id` ASC),
  INDEX `show_id_idx` (`Show_id` ASC),
  CONSTRAINT `promotion` FOREIGN KEY (`promtionEntered`) REFERENCES `CEBS_db`.`Promotions` (`promotion_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `customer` FOREIGN KEY (`customer`) REFERENCES `CEBS_db`.`Customers` (`customer_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `show_id` FOREIGN KEY (`Show_id`) REFERENCES `CEBS_db`.`Showing` (`showing_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `CEBS_db`.`Ticket`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEBS_db`.`Ticket` (
  `ticket_id` INT NOT NULL COMMENT 'The id for the ticket, for use within the system.',
  `price` DECIMAL NOT NULL,
  `redeemed` TINYINT NOT NULL COMMENT 'A boolean to check if a ticket is redeemed or not, cannot be returned if it has been redeemed.',
  `ticket_type` INT NOT NULL COMMENT 'The ticket type from the Ticket Types table.',
  `booking` INT NOT NULL COMMENT 'The booking the ticket is associated with',
  PRIMARY KEY (`ticket_id`),
  INDEX `booking_idx` (`booking` ASC),
  CONSTRAINT `booking` FOREIGN KEY (`booking`) REFERENCES `CEBS_db`.`booking` (`booking_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `CEBS_db`.`archived_movies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEBS_db`.`archived_movies` (
  `archive_id` INT NOT NULL COMMENT 'The id for the movie within the archive table.',
  `movie_id` INT NOT NULL COMMENT 'The id of the movie that has been archived.',
  PRIMARY KEY (`archive_id`),
  INDEX `movie_id_idx` (`movie_id` ASC),
  UNIQUE INDEX `archive_id_UNIQUE` (`archive_id` ASC),
  CONSTRAINT `movie_id` FOREIGN KEY (`movie_id`) REFERENCES `CEBS_db`.`Movies` (`movie_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `CEBS_db`.`ShowSeat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEBS_db`.`ShowSeat` (
  `idShowSeat` INT NOT NULL AUTO_INCREMENT,
  `showroom_id` INT NOT NULL,
  `purchased` INT NOT NULL,
  `row` VARCHAR(45) NOT NULL,
  `seat` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idShowSeat`),
  INDEX `showroom_id_idx` (`showroom_id` ASC),
  CONSTRAINT `showroom_id` FOREIGN KEY (`showroom_id`) REFERENCES `CEBS_db`.`Showroom` (`room_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `CEBS_db`.`ShowTime`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEBS_db`.`ShowTime` (
  `showtime_id` INT NOT NULL AUTO_INCREMENT,
  `showroom` INT NOT NULL,
  PRIMARY KEY (`showtime_id`),
  INDEX `showroom_id_idx` (`showroom` ASC),
  CONSTRAINT `showroom_ids` FOREIGN KEY (`showroom`) REFERENCES `CEBS_db`.`Showroom` (`room_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB;
SET SQL_MODE = @OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS;
INSERT INTO Categories
VALUES (NULL, 'Action'),
  (NULL, 'Comedy'),
  (NULL, 'Drama'),
  (NULL, 'Fantasy'),
  (NULL, 'Horror'),
  (NULL, 'Myster'),
  (NULL, 'Romance'),
  (NULL, 'Sci-Fi'),
  (NULL, 'Thriller'),
  (NULL, 'Western');
INSERT INTO Showroom
VALUES (NULL, 0.0),
  (NULL, 0.0),
  (NULL, 0.0),
  (NULL, 0.0),
  (NULL, 0.0);
INSERT INTO Movies
VALUES (
    1,
    'Confess, Fletch',
    'John Hamm, Caitlin Zerra Rose, Roy Wood Jr.',
    'Greg Mottola',
    'After becoming the prime suspect in multiple murders, Fletch strives to prove his innocence while simultaneously searching for his fiancé''s stolen art collection.',
    'https://www.youtube.com/watch?v=pb2Pu5EjC1s&ab_channel=ParamountMovies',
    2.0,
    6.5
  ),
  (
    2,
    'Don''t Worry Darling',
    'Florence Pugh, Harry Styles, Chris Pine',
    'Olivia Wilde',
    'n the 1950s, Alice and Jack live in the idealized community of Victory, an experimental company town that houses the men who work on a top-secret project. While the husbands toil away, the wives get to enjoy the beauty, luxury and debauchery of their seemingly perfect paradise. However, when cracks in her idyllic life begin to appear, exposing flashes of something sinister lurking below the surface, Alice can''t help but question exactly what she''s doing in Victory.',
    'https://www.youtube.com/watch?v=FgmnKsED-jU&ab_channel=WarnerBros.Pictures',
    8.0,
    6.2
  ),
  (
    3,
    'NOPE',
    'Daniel Haluuya, Keke Palmer, Steven Yeun',
    'Jordan Peele',
    'The residents of a lonely gulch in inland California bear witness to an uncanny and chilling discovery.',
    'https://www.youtube.com/watch?v=In8fuzj3gck&ab_channel=UniversalPictures',
    5.0,
    6.9
  ),
  (
    4,
    'Pearl',
    'Mia Goth, David Cornerswet, Tandi Wright',
    'Ti West',
    'In 1918, a young woman on the brink of madness pursues stardom in a desperate attempt to escape the drudgery, isolation and lovelessness of life on her parents'' farm.',
    'https://www.youtube.com/watch?v=L5PW5r3pEOg&ab_channel=A24',
    5.0,
    7.0
  ),
  (
    5,
    'THE WOMAN KING',
    'Viola Davis, Thuso Mbedu, Lashana Lynch',
    'Gina Prince-Bythewood',
    'A historical epic inspired by true events that took place in The Kingdom of Dahomey, one of the most powerful states of Africa in the 18th and 19th centuries.',
    'https://www.youtube.com/watch?v=3RDaPV_rJ1Y&ab_channel=SonyPicturesEntertainment',
    1.0,
    6.7
  );
INSERT INTO Showseat
VALUES (1.0, 1.0, 0.0, 'a', 1.0),
  (2, 1.0, 0.0, 'a', 2.0),
  (3, 1.0, 0.0, 'a', 3.0),
  (4, 1.0, 0.0, 'a', 4.0),
  (5, 1.0, 0.0, 'a', 5.0),
  (6, 1.0, 0.0, 'a', 6.0),
  (7, 1.0, 0.0, 'a', 7.0),
  (8, 1.0, 0.0, 'a', 8.0),
  (9, 1.0, 0.0, 'a', 9.0),
  (10, 1.0, 0.0, 'b', 1.0),
  (11, 1.0, 0.0, 'b', 2.0),
  (12, 1.0, 0.0, 'b', 3.0),
  (13, 1.0, 0.0, 'b', 4.0),
  (14, 1.0, 0.0, 'b', 5.0),
  (15, 1.0, 0.0, 'b', 6.0),
  (16, 1.0, 0.0, 'b', 7.0),
  (17, 1.0, 0.0, 'b', 8.0),
  (18, 1.0, 0.0, 'b', 9.0),
  (19, 1.0, 0.0, 'c', 1.0),
  (20, 1.0, 0.0, 'c', 2.0),
  (21, 1.0, 0.0, 'c', 3.0),
  (22, 1.0, 0.0, 'c', 4.0),
  (23, 1.0, 0.0, 'c', 5.0),
  (24, 1.0, 0.0, 'c', 6.0),
  (25, 1.0, 0.0, 'c', 7.0),
  (26, 1.0, 0.0, 'c', 8.0),
  (27, 1.0, 0.0, 'c', 9.0),
  (28, 1.0, 0.0, 'd', 1.0),
  (29, 1.0, 0.0, 'd', 2.0),
  (30, 1.0, 0.0, 'd', 3.0),
  (31, 1.0, 0.0, 'd', 4.0),
  (32, 1.0, 0.0, 'd', 5.0),
  (33, 1.0, 0.0, 'd', 6.0),
  (34, 1.0, 0.0, 'd', 7.0),
  (35, 1.0, 0.0, 'd', 8.0),
  (36, 1.0, 0.0, 'd', 9.0),
  (37, 1.0, 0.0, 'e', 1.0),
  (38, 1.0, 0.0, 'e', 2.0),
  (39, 1.0, 0.0, 'e', 3.0),
  (40, 1.0, 0.0, 'e', 4.0),
  (41, 1.0, 0.0, 'e', 5.0),
  (42, 1.0, 0.0, 'e', 6.0),
  (43, 1.0, 0.0, 'e', 7.0),
  (44, 1.0, 0.0, 'e', 8.0),
  (45, 1.0, 0.0, 'e', 9.0),
  (46, 2.0, 0.0, 'a', 1.0),
  (47, 2.0, 0.0, 'a', 2.0),
  (48, 2.0, 0.0, 'a', 3.0),
  (49, 2.0, 0.0, 'a', 4.0),
  (50, 2.0, 0.0, 'a', 5.0),
  (51, 2.0, 0.0, 'a', 6.0),
  (52, 2.0, 0.0, 'a', 7.0),
  (53, 2.0, 0.0, 'a', 8.0),
  (54, 2.0, 0.0, 'a', 9.0),
  (55, 2.0, 0.0, 'b', 1.0),
  (56, 2.0, 0.0, 'b', 2.0),
  (57, 2.0, 0.0, 'b', 3.0),
  (58, 2.0, 0.0, 'b', 4.0),
  (59, 2.0, 0.0, 'b', 5.0),
  (60, 2.0, 0.0, 'b', 6.0),
  (61, 2.0, 0.0, 'b', 7.0),
  (62, 2.0, 0.0, 'b', 8.0),
  (63, 2.0, 0.0, 'b', 9.0),
  (64, 2.0, 0.0, 'c', 1.0),
  (65, 2.0, 0.0, 'c', 2.0),
  (66, 2.0, 0.0, 'c', 3.0),
  (67, 2.0, 0.0, 'c', 4.0),
  (68, 2.0, 0.0, 'c', 5.0),
  (69, 2.0, 0.0, 'c', 6.0),
  (70, 2.0, 0.0, 'c', 7.0),
  (71, 2.0, 0.0, 'c', 8.0),
  (72, 2.0, 0.0, 'c', 9.0),
  (73, 2.0, 0.0, 'd', 1.0),
  (74, 2.0, 0.0, 'd', 2.0),
  (75, 2.0, 0.0, 'd', 3.0),
  (76, 2.0, 0.0, 'd', 4.0),
  (77, 2.0, 0.0, 'd', 5.0),
  (78, 2.0, 0.0, 'd', 6.0),
  (79, 2.0, 0.0, 'd', 7.0),
  (80, 2.0, 0.0, 'd', 8.0),
  (81, 2.0, 0.0, 'd', 9.0),
  (82, 2.0, 0.0, 'e', 1.0),
  (83, 2.0, 0.0, 'e', 2.0),
  (84, 2.0, 0.0, 'e', 3.0),
  (85, 2.0, 0.0, 'e', 4.0),
  (86, 2.0, 0.0, 'e', 5.0),
  (87, 2.0, 0.0, 'e', 6.0),
  (88, 2.0, 0.0, 'e', 7.0),
  (89, 2.0, 0.0, 'e', 8.0),
  (90, 2.0, 0.0, 'e', 9.0),
  (91, 3.0, 0.0, 'a', 1.0),
  (92, 3.0, 0.0, 'a', 2.0),
  (93, 3.0, 0.0, 'a', 3.0),
  (94, 3.0, 0.0, 'a', 4.0),
  (95, 3.0, 0.0, 'a', 5.0),
  (96, 3.0, 0.0, 'a', 6.0),
  (97, 3.0, 0.0, 'a', 7.0),
  (98, 3.0, 0.0, 'a', 8.0),
  (99, 3.0, 0.0, 'a', 9.0),
  (100, 3.0, 0.0, 'b', 1.0),
  (101, 3.0, 0.0, 'b', 2.0),
  (102, 3.0, 0.0, 'b', 3.0),
  (103, 3.0, 0.0, 'b', 4.0),
  (104, 3.0, 0.0, 'b', 5.0),
  (105, 3.0, 0.0, 'b', 6.0),
  (106, 3.0, 0.0, 'b', 7.0),
  (107, 3.0, 0.0, 'b', 8.0),
  (108, 3.0, 0.0, 'b', 9.0),
  (109, 3.0, 0.0, 'c', 1.0),
  (110, 3.0, 0.0, 'c', 2.0),
  (111, 3.0, 0.0, 'c', 3.0),
  (112, 3.0, 0.0, 'c', 4.0),
  (113, 3.0, 0.0, 'c', 5.0),
  (114, 3.0, 0.0, 'c', 6.0),
  (115, 3.0, 0.0, 'c', 7.0),
  (116, 3.0, 0.0, 'c', 8.0),
  (117, 3.0, 0.0, 'c', 9.0),
  (118, 3.0, 0.0, 'd', 1.0),
  (119, 3.0, 0.0, 'd', 2.0),
  (120, 3.0, 0.0, 'd', 3.0),
  (121, 3.0, 0.0, 'd', 4.0),
  (122, 3.0, 0.0, 'd', 5.0),
  (123, 3.0, 0.0, 'd', 6.0),
  (124, 3.0, 0.0, 'd', 7.0),
  (125, 3.0, 0.0, 'd', 8.0),
  (126, 3.0, 0.0, 'd', 9.0),
  (127, 3.0, 0.0, 'e', 1.0),
  (128, 3.0, 0.0, 'e', 2.0),
  (129, 3.0, 0.0, 'e', 3.0),
  (130, 3.0, 0.0, 'e', 4.0),
  (131, 3.0, 0.0, 'e', 5.0),
  (132, 3.0, 0.0, 'e', 6.0),
  (133, 3.0, 0.0, 'e', 7.0),
  (134, 3.0, 0.0, 'e', 8.0),
  (135, 3.0, 0.0, 'e', 9.0),
  (136, 4.0, 0.0, 'a', 1.0),
  (137, 4.0, 0.0, 'a', 2.0),
  (138, 4.0, 0.0, 'a', 3.0),
  (139, 4.0, 0.0, 'a', 4.0),
  (140, 4.0, 0.0, 'a', 5.0),
  (141, 4.0, 0.0, 'a', 6.0),
  (142, 4.0, 0.0, 'a', 7.0),
  (143, 4.0, 0.0, 'a', 8.0),
  (144, 4.0, 0.0, 'a', 9.0),
  (145, 4.0, 0.0, 'b', 1.0),
  (146, 4.0, 0.0, 'b', 2.0),
  (147, 4.0, 0.0, 'b', 3.0),
  (148, 4.0, 0.0, 'b', 4.0),
  (149, 4.0, 0.0, 'b', 5.0),
  (150, 4.0, 0.0, 'b', 6.0),
  (151, 4.0, 0.0, 'b', 7.0),
  (152, 4.0, 0.0, 'b', 8.0),
  (153, 4.0, 0.0, 'b', 9.0),
  (154, 4.0, 0.0, 'c', 1.0),
  (155, 4.0, 0.0, 'c', 2.0),
  (156, 4.0, 0.0, 'c', 3.0),
  (157, 4.0, 0.0, 'c', 4.0),
  (158, 4.0, 0.0, 'c', 5.0),
  (159, 4.0, 0.0, 'c', 6.0),
  (160, 4.0, 0.0, 'c', 7.0),
  (161, 4.0, 0.0, 'c', 8.0),
  (162, 4.0, 0.0, 'c', 9.0),
  (163, 4.0, 0.0, 'd', 1.0),
  (164, 4.0, 0.0, 'd', 2.0),
  (165, 4.0, 0.0, 'd', 3.0),
  (166, 4.0, 0.0, 'd', 4.0),
  (167, 4.0, 0.0, 'd', 5.0),
  (168, 4.0, 0.0, 'd', 6.0),
  (169, 4.0, 0.0, 'd', 7.0),
  (170, 4.0, 0.0, 'd', 8.0),
  (171, 4.0, 0.0, 'd', 9.0),
  (172, 4.0, 0.0, 'e', 1.0),
  (173, 4.0, 0.0, 'e', 2.0),
  (174, 4.0, 0.0, 'e', 3.0),
  (175, 4.0, 0.0, 'e', 4.0),
  (176, 4.0, 0.0, 'e', 5.0),
  (177, 4.0, 0.0, 'e', 6.0),
  (178, 4.0, 0.0, 'e', 7.0),
  (179, 4.0, 0.0, 'e', 8.0),
  (180, 4.0, 0.0, 'e', 9.0),
  (181, 5.0, 0.0, 'a', 1.0),
  (182, 5.0, 0.0, 'a', 2.0),
  (183, 5.0, 0.0, 'a', 3.0),
  (184, 5.0, 0.0, 'a', 4.0),
  (185, 5.0, 0.0, 'a', 5.0),
  (186, 5.0, 0.0, 'a', 6.0),
  (187, 5.0, 0.0, 'a', 7.0),
  (188, 5.0, 0.0, 'a', 8.0),
  (189, 5.0, 0.0, 'a', 9.0),
  (190, 5.0, 0.0, 'b', 1.0),
  (191, 5.0, 0.0, 'b', 2.0),
  (192, 5.0, 0.0, 'b', 3.0),
  (193, 5.0, 0.0, 'b', 4.0),
  (194, 5.0, 0.0, 'b', 5.0),
  (195, 5.0, 0.0, 'b', 6.0),
  (196, 5.0, 0.0, 'b', 7.0),
  (197, 5.0, 0.0, 'b', 8.0),
  (198, 5.0, 0.0, 'b', 9.0),
  (199, 5.0, 0.0, 'c', 1.0),
  (200, 5.0, 0.0, 'c', 2.0),
  (201, 5.0, 0.0, 'c', 3.0),
  (202, 5.0, 0.0, 'c', 4.0),
  (203, 5.0, 0.0, 'c', 5.0),
  (204, 5.0, 0.0, 'c', 6.0),
  (205, 5.0, 0.0, 'c', 7.0),
  (206, 5.0, 0.0, 'c', 8.0),
  (207, 5.0, 0.0, 'c', 9.0),
  (208, 5.0, 0.0, 'd', 1.0),
  (209, 5.0, 0.0, 'd', 2.0),
  (210, 5.0, 0.0, 'd', 3.0),
  (211, 5.0, 0.0, 'd', 4.0),
  (212, 5.0, 0.0, 'd', 5.0),
  (213, 5.0, 0.0, 'd', 6.0),
  (214, 5.0, 0.0, 'd', 7.0),
  (215, 5.0, 0.0, 'd', 8.0),
  (216, 5.0, 0.0, 'd', 9.0),
  (217, 5.0, 0.0, 'e', 1.0),
  (218, 5.0, 0.0, 'e', 2.0),
  (219, 5.0, 0.0, 'e', 3.0),
  (220, 5.0, 0.0, 'e', 4.0),
  (221, 5.0, 0.0, 'e', 5.0),
  (222, 5.0, 0.0, 'e', 6.0),
  (223, 5.0, 0.0, 'e', 7.0),
  (224, 5.0, 0.0, 'e', 8.0),
  (225, 5.0, 0.0, 'e', 9.0);